/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package eu.nbdemetra.specParser;


import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 *  Top component which displays the SpecViewer.
 */
@ConvertAsProperties(
        dtd = "-//eu.nbdemetra.x13spec//SingleSpecWindow//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "SingleSpecWindowTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_NEVER
)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@ActionID(category = "Window", id = "eu.nbdemetra.x13spec.SingleSpecWindowTopComponent")

@TopComponent.OpenActionRegistration(
        displayName = "#CTL_SingleSpecWindowAction",
        preferredID = "SingleSpecWindowTopComponent"
)
@Messages({
    "CTL_SingleSpecWindowAction=SingleSpecWindow",
    "CTL_SingleSpecWindowTopComponent=SingleSpecWindow",
    "HINT_SingleSpecWindowTopComponent=This is a SingleSpecWindow"
})
public final class SingleTopComponent extends TopComponent {

    private boolean open;

    public SingleTopComponent() {

        initComponents();
        setName(Bundle.CTL_SingleSpecWindowTopComponent());
        setToolTipText(Bundle.HINT_SingleSpecWindowTopComponent());
        open = true;
    }

    
    public void setSpecView(SpecCollector spec){
    
        specViewer = SpecViewer.create(spec);
        add(specViewer);
        specViewer.refreshHeader();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.BorderLayout());
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    private SpecViewer specViewer;
    
    public void refreshSpecCollector(){
        
    }
    
    @Override
    public void componentOpened() {
        open = true;
    }

    @Override
    public void componentClosed() {
        open = false;
    }

    public boolean isOpen() {
        return open;
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}